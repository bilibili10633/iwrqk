name: Build Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

env:
  APP_PACK_NAME: iwrqk

permissions:
  contents: write

jobs:
  build_and_upload:
    name: Build releases
    strategy:
      matrix:
        include:
          - target: android
            os: ubuntu-latest
            flutter_version: "3.32.7"
            flutter_channel: "stable"
            artifact_name: release-apk
            artifact_path: build/app/outputs/apk/release/*.apk
          - target: ios
            os: macos-14
            flutter_version: "3.32.7"
            flutter_channel: "stable"
            artifact_name: release-ios
            artifact_path: build/ios/ipa/*.ipa

    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{matrix.flutter_version}}
          channel: ${{matrix.flutter_channel}}

      - name: Setup JDK 21 (Android)
        if: matrix.target == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"
          cache: gradle

      - name: Decode keystore (Android)
        if: matrix.target == 'android'
        run: echo $ENCODED_KEYSTORE | base64 -di > android/app/keystore.jks
        env:
          ENCODED_KEYSTORE: ${{secrets.ENCODED_KEYSTORE}}

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build resolve Swift dependencies (iOS)
        if: matrix.target == 'ios'
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Get app version
        id: get_version
        shell: bash
        run: |
          echo "version=$(grep -m1 version: pubspec.yaml | awk '{print $2}' | sed 's/\"//g')" >> $GITHUB_OUTPUT

      - name: Build APKs (Android)
        if: matrix.target == 'android'
        run: flutter build apk --release
        env:
          KEYSTORE_PASSWORD: ${{secrets.KEYSTORE_PASSWORD}}
          KEY_ALIAS: ${{secrets.KEY_ALIAS}}
          KEY_PASSWORD: ${{secrets.KEY_PASSWORD}}

      - name: Build release (iOS)
        if: matrix.target == 'ios'
        run: flutter build ios --release --no-codesign

      - name: Build ipa (iOS)
        if: matrix.target == 'ios'
        run: |
          mkdir -p build/ios/ipa/Payload
          cd build/ios/ipa/
          mv ../iphoneos/Runner.app Payload
          zip -9 ${APP_PACK_NAME}-${{steps.get_version.outputs.version}}.ipa -r Payload

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.artifact_name}}
          path: ${{matrix.artifact_path}}

  publish_release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish release
    needs: build_and_upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: mkdir /tmp/artifacts

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: /tmp/artifacts

      - name: Get app version
        id: get_version
        shell: bash
        run: |
          echo "version=$(grep -m1 version: pubspec.yaml | awk '{print $2}' | sed 's/\"//g')" >> $GITHUB_OUTPUT

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/artifacts/release-apk/*.apk,/tmp/artifacts/release-ios/*.ipa"
          tag: ${{github.ref_name}}
          prerelease: contains(github.ref, 'pre')
          allowUpdates: true
          artifactErrorsFailBuild: true
          replacesArtifacts: true
